syntax = "proto3";

package stredono;

option go_package="github.com/pkulik0/stredono/cloud/pb";

enum Currency {
  UNKNOWN = 0;
  PLN = 1;
}

enum TipStatus {
  INITIATED = 0;
  PAYMENT_PENDING = 1;
  PAYMENT_SUCCESS = 2;
}

message Tip {
  string SenderId = 1;
  string DisplayName = 2;
  string Email = 3;
  string Message = 4;
  double Amount = 5;
  Currency Currency = 6;
  string RecipientId = 7;
  TipStatus Status = 8;
  int64 Timestamp = 9;
}

enum AuthLevel {
  NONE = 0;
  EMAIL = 1;
  OIDC = 2;
}

message User {
  string Uid = 1;
  string Username = 2;
  string DisplayName = 3;
  string Description = 4;

  string PictureUrl = 5;
  string Url = 6;

  AuthLevel MinAuthLevel = 7;
  double MinAmount = 8;
  Currency Currency = 9;

  string VoiceBasic = 10;
  string VoicePlus = 11;
  Tier VoiceTier = 12;
}

enum EventType {
  TIP = 0;
  CHEER = 1;
  FOLLOW = 2;
  SUBSCRIBE = 3;
  SUBGIFT = 4;
  RAID = 5;
}

message Event {
  string Id = 1;
  EventType Type = 2;
  map<string, string> Data = 3;
}

message UsersAlerts {
  repeated Alert Alerts = 1;
}

message Alert {
  string Id = 1;
  EventType EventType = 2;
  string Message = 3;

  double Min = 4;
  double Max = 5;

  string GifUrl = 6;
  string SoundUrl = 7;

  AnimationType Animation = 8;
  Speed AnimationSpeed = 9;

  string TextColor = 10;
  string AccentColor = 11;

  Alignment Alignment = 12;
  Position TextPosition = 13;
}

enum AnimationType {
  PULSE = 0;
  HEART_BEAT = 2;
  SHAKE_VERTICALLY = 4;
  SHAKE_HORIZONTALLY = 5;
  TADA = 8;
  JELLO = 9;
  BOUNCE = 10;
}

enum Alignment {
  START = 0;
  CENTER = 1;
  END = 2;
  JUSTIFY = 3;
}

enum Position {
  TOP = 0;
  LEFT = 1;
  RIGHT = 2;
  BOTTOM = 3;
}

enum Speed {
  OFF = 0;
  SLOW = 1;
  MEDIUM = 2;
  FAST = 3;
  FASTER = 4;
}

message Token {
  string Access = 1;
  string Refresh = 2;
}

message TwitchReward {
  string Id = 1;
  string Name = 2;
  int64 Cost = 3;
  bool IsEnabled = 4;
}

message TwitchUser {
  string Id = 1;
  string DisplayName = 2;
  string Login = 3;
  string AvatarUrl = 4;
  string Description = 5;
  int64 CreationTimestamp = 6;
}

message SpeechRequest {
  string Id = 1;
  string Uid = 2;
  string Text = 3;
  string VoiceIdBasic = 4;
  string VoiceIdPlus = 5;
}

enum Tier {
  BASIC = 0;
  PLUS = 1;
}

enum Gender {
  NOT_SPECIFIED = 0;
  MALE = 1;
  FEMALE = 2;
}

message Voice {
  string Id = 1;
  string Name = 2;
  Gender Gender = 3;
  Tier Tier = 4;
  string Provider = 5;
  repeated string Languages = 7;
  string SampleUrl = 8;
}

message Voices {
  repeated Voice Voices = 1;
}

message TTSKey {
  string Key = 1;
  int32 CharactersLeft = 2;
  int32 CharactersLimit = 3;
  int64 ResetTimestamp = 4;
  int64 LastUsed = 5;
}

message TTSProvider {
  int64 LastUpdated = 1;
  repeated Voice Voices = 2;
  repeated string Languages = 3;
}
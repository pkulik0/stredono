// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file pb/alerts.proto (package stredono, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message stredono.AlertsKey
 */
export class AlertsKey extends Message<AlertsKey> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  constructor(data?: PartialMessage<AlertsKey>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "stredono.AlertsKey";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AlertsKey {
    return new AlertsKey().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AlertsKey {
    return new AlertsKey().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AlertsKey {
    return new AlertsKey().fromJsonString(jsonString, options);
  }

  static equals(a: AlertsKey | PlainMessage<AlertsKey> | undefined, b: AlertsKey | PlainMessage<AlertsKey> | undefined): boolean {
    return proto3.util.equals(AlertsKey, a, b);
  }
}


// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file pb/user.proto (package stredono, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message stredono.User
 */
export class User extends Message<User> {
  /**
   * @generated from field: string Uid = 1;
   */
  Uid = "";

  /**
   * @generated from field: string Username = 2;
   */
  Username = "";

  /**
   * @generated from field: string DisplayName = 3;
   */
  DisplayName = "";

  /**
   * @generated from field: string Description = 4;
   */
  Description = "";

  /**
   * @generated from field: string PictureUrl = 5;
   */
  PictureUrl = "";

  /**
   * @generated from field: string Url = 6;
   */
  Url = "";

  constructor(data?: PartialMessage<User>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "stredono.User";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "Uid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "Username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "DisplayName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "Description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "PictureUrl", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "Url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): User {
    return new User().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): User {
    return new User().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): User {
    return new User().fromJsonString(jsonString, options);
  }

  static equals(a: User | PlainMessage<User> | undefined, b: User | PlainMessage<User> | undefined): boolean {
    return proto3.util.equals(User, a, b);
  }
}


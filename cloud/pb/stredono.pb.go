// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: pb/stredono.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Currency int32

const (
	Currency_UNKNOWN Currency = 0
	Currency_PLN     Currency = 1
)

// Enum value maps for Currency.
var (
	Currency_name = map[int32]string{
		0: "UNKNOWN",
		1: "PLN",
	}
	Currency_value = map[string]int32{
		"UNKNOWN": 0,
		"PLN":     1,
	}
)

func (x Currency) Enum() *Currency {
	p := new(Currency)
	*p = x
	return p
}

func (x Currency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Currency) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_stredono_proto_enumTypes[0].Descriptor()
}

func (Currency) Type() protoreflect.EnumType {
	return &file_pb_stredono_proto_enumTypes[0]
}

func (x Currency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Currency.Descriptor instead.
func (Currency) EnumDescriptor() ([]byte, []int) {
	return file_pb_stredono_proto_rawDescGZIP(), []int{0}
}

type TipStatus int32

const (
	TipStatus_INITIATED       TipStatus = 0
	TipStatus_PAYMENT_PENDING TipStatus = 1
	TipStatus_PAYMENT_SUCCESS TipStatus = 2
)

// Enum value maps for TipStatus.
var (
	TipStatus_name = map[int32]string{
		0: "INITIATED",
		1: "PAYMENT_PENDING",
		2: "PAYMENT_SUCCESS",
	}
	TipStatus_value = map[string]int32{
		"INITIATED":       0,
		"PAYMENT_PENDING": 1,
		"PAYMENT_SUCCESS": 2,
	}
)

func (x TipStatus) Enum() *TipStatus {
	p := new(TipStatus)
	*p = x
	return p
}

func (x TipStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TipStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_stredono_proto_enumTypes[1].Descriptor()
}

func (TipStatus) Type() protoreflect.EnumType {
	return &file_pb_stredono_proto_enumTypes[1]
}

func (x TipStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TipStatus.Descriptor instead.
func (TipStatus) EnumDescriptor() ([]byte, []int) {
	return file_pb_stredono_proto_rawDescGZIP(), []int{1}
}

type AuthLevel int32

const (
	AuthLevel_NONE  AuthLevel = 0
	AuthLevel_EMAIL AuthLevel = 1
	AuthLevel_OIDC  AuthLevel = 2
)

// Enum value maps for AuthLevel.
var (
	AuthLevel_name = map[int32]string{
		0: "NONE",
		1: "EMAIL",
		2: "OIDC",
	}
	AuthLevel_value = map[string]int32{
		"NONE":  0,
		"EMAIL": 1,
		"OIDC":  2,
	}
)

func (x AuthLevel) Enum() *AuthLevel {
	p := new(AuthLevel)
	*p = x
	return p
}

func (x AuthLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_stredono_proto_enumTypes[2].Descriptor()
}

func (AuthLevel) Type() protoreflect.EnumType {
	return &file_pb_stredono_proto_enumTypes[2]
}

func (x AuthLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthLevel.Descriptor instead.
func (AuthLevel) EnumDescriptor() ([]byte, []int) {
	return file_pb_stredono_proto_rawDescGZIP(), []int{2}
}

type EventType int32

const (
	EventType_TIP       EventType = 0
	EventType_CHEER     EventType = 1
	EventType_FOLLOW    EventType = 2
	EventType_SUBSCRIBE EventType = 3
	EventType_SUBGIFT   EventType = 4
	EventType_RAID      EventType = 5
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "TIP",
		1: "CHEER",
		2: "FOLLOW",
		3: "SUBSCRIBE",
		4: "SUBGIFT",
		5: "RAID",
	}
	EventType_value = map[string]int32{
		"TIP":       0,
		"CHEER":     1,
		"FOLLOW":    2,
		"SUBSCRIBE": 3,
		"SUBGIFT":   4,
		"RAID":      5,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_stredono_proto_enumTypes[3].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_pb_stredono_proto_enumTypes[3]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_pb_stredono_proto_rawDescGZIP(), []int{3}
}

type AnimationType int32

const (
	AnimationType_PULSE              AnimationType = 0
	AnimationType_HEART_BEAT         AnimationType = 2
	AnimationType_SHAKE_VERTICALLY   AnimationType = 4
	AnimationType_SHAKE_HORIZONTALLY AnimationType = 5
	AnimationType_TADA               AnimationType = 8
	AnimationType_JELLO              AnimationType = 9
	AnimationType_BOUNCE             AnimationType = 10
)

// Enum value maps for AnimationType.
var (
	AnimationType_name = map[int32]string{
		0:  "PULSE",
		2:  "HEART_BEAT",
		4:  "SHAKE_VERTICALLY",
		5:  "SHAKE_HORIZONTALLY",
		8:  "TADA",
		9:  "JELLO",
		10: "BOUNCE",
	}
	AnimationType_value = map[string]int32{
		"PULSE":              0,
		"HEART_BEAT":         2,
		"SHAKE_VERTICALLY":   4,
		"SHAKE_HORIZONTALLY": 5,
		"TADA":               8,
		"JELLO":              9,
		"BOUNCE":             10,
	}
)

func (x AnimationType) Enum() *AnimationType {
	p := new(AnimationType)
	*p = x
	return p
}

func (x AnimationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnimationType) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_stredono_proto_enumTypes[4].Descriptor()
}

func (AnimationType) Type() protoreflect.EnumType {
	return &file_pb_stredono_proto_enumTypes[4]
}

func (x AnimationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnimationType.Descriptor instead.
func (AnimationType) EnumDescriptor() ([]byte, []int) {
	return file_pb_stredono_proto_rawDescGZIP(), []int{4}
}

type Alignment int32

const (
	Alignment_START   Alignment = 0
	Alignment_CENTER  Alignment = 1
	Alignment_END     Alignment = 2
	Alignment_JUSTIFY Alignment = 3
)

// Enum value maps for Alignment.
var (
	Alignment_name = map[int32]string{
		0: "START",
		1: "CENTER",
		2: "END",
		3: "JUSTIFY",
	}
	Alignment_value = map[string]int32{
		"START":   0,
		"CENTER":  1,
		"END":     2,
		"JUSTIFY": 3,
	}
)

func (x Alignment) Enum() *Alignment {
	p := new(Alignment)
	*p = x
	return p
}

func (x Alignment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Alignment) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_stredono_proto_enumTypes[5].Descriptor()
}

func (Alignment) Type() protoreflect.EnumType {
	return &file_pb_stredono_proto_enumTypes[5]
}

func (x Alignment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Alignment.Descriptor instead.
func (Alignment) EnumDescriptor() ([]byte, []int) {
	return file_pb_stredono_proto_rawDescGZIP(), []int{5}
}

type Position int32

const (
	Position_TOP    Position = 0
	Position_LEFT   Position = 1
	Position_RIGHT  Position = 2
	Position_BOTTOM Position = 3
)

// Enum value maps for Position.
var (
	Position_name = map[int32]string{
		0: "TOP",
		1: "LEFT",
		2: "RIGHT",
		3: "BOTTOM",
	}
	Position_value = map[string]int32{
		"TOP":    0,
		"LEFT":   1,
		"RIGHT":  2,
		"BOTTOM": 3,
	}
)

func (x Position) Enum() *Position {
	p := new(Position)
	*p = x
	return p
}

func (x Position) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Position) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_stredono_proto_enumTypes[6].Descriptor()
}

func (Position) Type() protoreflect.EnumType {
	return &file_pb_stredono_proto_enumTypes[6]
}

func (x Position) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Position.Descriptor instead.
func (Position) EnumDescriptor() ([]byte, []int) {
	return file_pb_stredono_proto_rawDescGZIP(), []int{6}
}

type Speed int32

const (
	Speed_OFF    Speed = 0
	Speed_SLOW   Speed = 1
	Speed_MEDIUM Speed = 2
	Speed_FAST   Speed = 3
	Speed_FASTER Speed = 4
)

// Enum value maps for Speed.
var (
	Speed_name = map[int32]string{
		0: "OFF",
		1: "SLOW",
		2: "MEDIUM",
		3: "FAST",
		4: "FASTER",
	}
	Speed_value = map[string]int32{
		"OFF":    0,
		"SLOW":   1,
		"MEDIUM": 2,
		"FAST":   3,
		"FASTER": 4,
	}
)

func (x Speed) Enum() *Speed {
	p := new(Speed)
	*p = x
	return p
}

func (x Speed) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Speed) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_stredono_proto_enumTypes[7].Descriptor()
}

func (Speed) Type() protoreflect.EnumType {
	return &file_pb_stredono_proto_enumTypes[7]
}

func (x Speed) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Speed.Descriptor instead.
func (Speed) EnumDescriptor() ([]byte, []int) {
	return file_pb_stredono_proto_rawDescGZIP(), []int{7}
}

type Tip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderId    string    `protobuf:"bytes,1,opt,name=SenderId,proto3" json:"SenderId,omitempty"`
	DisplayName string    `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	Email       string    `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	Message     string    `protobuf:"bytes,4,opt,name=Message,proto3" json:"Message,omitempty"`
	Amount      float64   `protobuf:"fixed64,5,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Currency    Currency  `protobuf:"varint,6,opt,name=Currency,proto3,enum=stredono.Currency" json:"Currency,omitempty"`
	RecipientId string    `protobuf:"bytes,7,opt,name=RecipientId,proto3" json:"RecipientId,omitempty"`
	Status      TipStatus `protobuf:"varint,8,opt,name=Status,proto3,enum=stredono.TipStatus" json:"Status,omitempty"`
	Timestamp   int64     `protobuf:"varint,9,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
}

func (x *Tip) Reset() {
	*x = Tip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_stredono_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tip) ProtoMessage() {}

func (x *Tip) ProtoReflect() protoreflect.Message {
	mi := &file_pb_stredono_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tip.ProtoReflect.Descriptor instead.
func (*Tip) Descriptor() ([]byte, []int) {
	return file_pb_stredono_proto_rawDescGZIP(), []int{0}
}

func (x *Tip) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Tip) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Tip) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Tip) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Tip) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Tip) GetCurrency() Currency {
	if x != nil {
		return x.Currency
	}
	return Currency_UNKNOWN
}

func (x *Tip) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *Tip) GetStatus() TipStatus {
	if x != nil {
		return x.Status
	}
	return TipStatus_INITIATED
}

func (x *Tip) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          string    `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Username     string    `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username,omitempty"`
	DisplayName  string    `protobuf:"bytes,3,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	Description  string    `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	PictureUrl   string    `protobuf:"bytes,5,opt,name=PictureUrl,proto3" json:"PictureUrl,omitempty"`
	Url          string    `protobuf:"bytes,6,opt,name=Url,proto3" json:"Url,omitempty"`
	MinAuthLevel AuthLevel `protobuf:"varint,7,opt,name=MinAuthLevel,proto3,enum=stredono.AuthLevel" json:"MinAuthLevel,omitempty"`
	MinAmount    float64   `protobuf:"fixed64,8,opt,name=MinAmount,proto3" json:"MinAmount,omitempty"`
	Currency     Currency  `protobuf:"varint,9,opt,name=Currency,proto3,enum=stredono.Currency" json:"Currency,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_stredono_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_pb_stredono_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_pb_stredono_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *User) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *User) GetPictureUrl() string {
	if x != nil {
		return x.PictureUrl
	}
	return ""
}

func (x *User) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *User) GetMinAuthLevel() AuthLevel {
	if x != nil {
		return x.MinAuthLevel
	}
	return AuthLevel_NONE
}

func (x *User) GetMinAmount() float64 {
	if x != nil {
		return x.MinAmount
	}
	return 0
}

func (x *User) GetCurrency() Currency {
	if x != nil {
		return x.Currency
	}
	return Currency_UNKNOWN
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string            `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Type EventType         `protobuf:"varint,2,opt,name=Type,proto3,enum=stredono.EventType" json:"Type,omitempty"`
	Data map[string]string `protobuf:"bytes,3,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_stredono_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_pb_stredono_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_pb_stredono_proto_rawDescGZIP(), []int{2}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_TIP
}

func (x *Event) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type UsersAlerts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alerts []*Alert `protobuf:"bytes,1,rep,name=Alerts,proto3" json:"Alerts,omitempty"`
}

func (x *UsersAlerts) Reset() {
	*x = UsersAlerts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_stredono_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersAlerts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersAlerts) ProtoMessage() {}

func (x *UsersAlerts) ProtoReflect() protoreflect.Message {
	mi := &file_pb_stredono_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersAlerts.ProtoReflect.Descriptor instead.
func (*UsersAlerts) Descriptor() ([]byte, []int) {
	return file_pb_stredono_proto_rawDescGZIP(), []int{3}
}

func (x *UsersAlerts) GetAlerts() []*Alert {
	if x != nil {
		return x.Alerts
	}
	return nil
}

type Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string        `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	EventType      EventType     `protobuf:"varint,2,opt,name=EventType,proto3,enum=stredono.EventType" json:"EventType,omitempty"`
	Message        string        `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
	Min            float64       `protobuf:"fixed64,4,opt,name=Min,proto3" json:"Min,omitempty"`
	Max            float64       `protobuf:"fixed64,5,opt,name=Max,proto3" json:"Max,omitempty"`
	GifUrl         string        `protobuf:"bytes,6,opt,name=GifUrl,proto3" json:"GifUrl,omitempty"`
	SoundUrl       string        `protobuf:"bytes,7,opt,name=SoundUrl,proto3" json:"SoundUrl,omitempty"`
	Animation      AnimationType `protobuf:"varint,8,opt,name=Animation,proto3,enum=stredono.AnimationType" json:"Animation,omitempty"`
	AnimationSpeed Speed         `protobuf:"varint,9,opt,name=AnimationSpeed,proto3,enum=stredono.Speed" json:"AnimationSpeed,omitempty"`
	TextColor      string        `protobuf:"bytes,10,opt,name=TextColor,proto3" json:"TextColor,omitempty"`
	AccentColor    string        `protobuf:"bytes,11,opt,name=AccentColor,proto3" json:"AccentColor,omitempty"`
	Alignment      Alignment     `protobuf:"varint,12,opt,name=Alignment,proto3,enum=stredono.Alignment" json:"Alignment,omitempty"`
	TextPosition   Position      `protobuf:"varint,13,opt,name=TextPosition,proto3,enum=stredono.Position" json:"TextPosition,omitempty"`
}

func (x *Alert) Reset() {
	*x = Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_stredono_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_pb_stredono_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_pb_stredono_proto_rawDescGZIP(), []int{4}
}

func (x *Alert) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Alert) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_TIP
}

func (x *Alert) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Alert) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Alert) GetMax() float64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *Alert) GetGifUrl() string {
	if x != nil {
		return x.GifUrl
	}
	return ""
}

func (x *Alert) GetSoundUrl() string {
	if x != nil {
		return x.SoundUrl
	}
	return ""
}

func (x *Alert) GetAnimation() AnimationType {
	if x != nil {
		return x.Animation
	}
	return AnimationType_PULSE
}

func (x *Alert) GetAnimationSpeed() Speed {
	if x != nil {
		return x.AnimationSpeed
	}
	return Speed_OFF
}

func (x *Alert) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *Alert) GetAccentColor() string {
	if x != nil {
		return x.AccentColor
	}
	return ""
}

func (x *Alert) GetAlignment() Alignment {
	if x != nil {
		return x.Alignment
	}
	return Alignment_START
}

func (x *Alert) GetTextPosition() Position {
	if x != nil {
		return x.TextPosition
	}
	return Position_TOP
}

type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Access  string `protobuf:"bytes,1,opt,name=Access,proto3" json:"Access,omitempty"`
	Refresh string `protobuf:"bytes,2,opt,name=Refresh,proto3" json:"Refresh,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_stredono_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_pb_stredono_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_pb_stredono_proto_rawDescGZIP(), []int{5}
}

func (x *Token) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

func (x *Token) GetRefresh() string {
	if x != nil {
		return x.Refresh
	}
	return ""
}

type TwitchReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Cost      int64  `protobuf:"varint,3,opt,name=Cost,proto3" json:"Cost,omitempty"`
	IsEnabled bool   `protobuf:"varint,4,opt,name=IsEnabled,proto3" json:"IsEnabled,omitempty"`
}

func (x *TwitchReward) Reset() {
	*x = TwitchReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_stredono_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwitchReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwitchReward) ProtoMessage() {}

func (x *TwitchReward) ProtoReflect() protoreflect.Message {
	mi := &file_pb_stredono_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwitchReward.ProtoReflect.Descriptor instead.
func (*TwitchReward) Descriptor() ([]byte, []int) {
	return file_pb_stredono_proto_rawDescGZIP(), []int{6}
}

func (x *TwitchReward) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TwitchReward) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TwitchReward) GetCost() int64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *TwitchReward) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

type TwitchUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	DisplayName       string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	Login             string `protobuf:"bytes,3,opt,name=Login,proto3" json:"Login,omitempty"`
	AvatarUrl         string `protobuf:"bytes,4,opt,name=AvatarUrl,proto3" json:"AvatarUrl,omitempty"`
	Description       string `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	CreationTimestamp int64  `protobuf:"varint,6,opt,name=CreationTimestamp,proto3" json:"CreationTimestamp,omitempty"`
}

func (x *TwitchUser) Reset() {
	*x = TwitchUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_stredono_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwitchUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwitchUser) ProtoMessage() {}

func (x *TwitchUser) ProtoReflect() protoreflect.Message {
	mi := &file_pb_stredono_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwitchUser.ProtoReflect.Descriptor instead.
func (*TwitchUser) Descriptor() ([]byte, []int) {
	return file_pb_stredono_proto_rawDescGZIP(), []int{7}
}

func (x *TwitchUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TwitchUser) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *TwitchUser) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *TwitchUser) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *TwitchUser) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TwitchUser) GetCreationTimestamp() int64 {
	if x != nil {
		return x.CreationTimestamp
	}
	return 0
}

var File_pb_stredono_proto protoreflect.FileDescriptor

var file_pb_stredono_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x62, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x22, 0xa8, 0x02,
	0x0a, 0x03, 0x54, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2e, 0x54, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xb1, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x37, 0x0a, 0x0c, 0x4d, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x0c, 0x4d, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x4d, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x4d, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x08,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xa8, 0x01, 0x0a,
	0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2d, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x37,
	0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x36, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e,
	0x6f, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x06, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x22,
	0xd7, 0x03, 0x0a, 0x05, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x09, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x69, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x4d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x61, 0x78, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x4d, 0x61, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x69,
	0x66, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x69, 0x66, 0x55,
	0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x35,
	0x0a, 0x09, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2e, 0x41, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x41, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0e, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x0e,
	0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b,
	0x41, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x31,
	0x0a, 0x09, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2e, 0x41, 0x6c, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x36, 0x0a, 0x0c, 0x54, 0x65, 0x78, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x64, 0x6f,
	0x6e, 0x6f, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x54, 0x65, 0x78,
	0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x05, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x22, 0x64, 0x0a, 0x0c, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x0a, 0x54,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2a,
	0x20, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x4c, 0x4e, 0x10,
	0x01, 0x2a, 0x44, 0x0a, 0x09, 0x54, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d,
	0x0a, 0x09, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a,
	0x0f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x2a, 0x2a, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x49, 0x44,
	0x43, 0x10, 0x02, 0x2a, 0x51, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x07, 0x0a, 0x03, 0x54, 0x49, 0x50, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x48, 0x45,
	0x45, 0x52, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x10, 0x03, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x55, 0x42, 0x47, 0x49, 0x46, 0x54, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04,
	0x52, 0x41, 0x49, 0x44, 0x10, 0x05, 0x2a, 0x79, 0x0a, 0x0d, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x55, 0x4c, 0x53, 0x45,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x45, 0x41, 0x52, 0x54, 0x5f, 0x42, 0x45, 0x41, 0x54,
	0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x48, 0x41, 0x4b, 0x45, 0x5f, 0x56, 0x45, 0x52, 0x54,
	0x49, 0x43, 0x41, 0x4c, 0x4c, 0x59, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x48, 0x41, 0x4b,
	0x45, 0x5f, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x4f, 0x4e, 0x54, 0x41, 0x4c, 0x4c, 0x59, 0x10, 0x05,
	0x12, 0x08, 0x0a, 0x04, 0x54, 0x41, 0x44, 0x41, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x4a, 0x45,
	0x4c, 0x4c, 0x4f, 0x10, 0x09, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x4f, 0x55, 0x4e, 0x43, 0x45, 0x10,
	0x0a, 0x2a, 0x38, 0x0a, 0x09, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x09,
	0x0a, 0x05, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x45, 0x4e,
	0x54, 0x45, 0x52, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x4a, 0x55, 0x53, 0x54, 0x49, 0x46, 0x59, 0x10, 0x03, 0x2a, 0x34, 0x0a, 0x08, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x4f, 0x50, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x4c, 0x45, 0x46, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x49,
	0x47, 0x48, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x4f, 0x54, 0x54, 0x4f, 0x4d, 0x10,
	0x03, 0x2a, 0x3c, 0x0a, 0x05, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x46,
	0x46, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x41, 0x53,
	0x54, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x53, 0x54, 0x45, 0x52, 0x10, 0x04, 0x42,
	0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6b,
	0x75, 0x6c, 0x69, 0x6b, 0x30, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_stredono_proto_rawDescOnce sync.Once
	file_pb_stredono_proto_rawDescData = file_pb_stredono_proto_rawDesc
)

func file_pb_stredono_proto_rawDescGZIP() []byte {
	file_pb_stredono_proto_rawDescOnce.Do(func() {
		file_pb_stredono_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_stredono_proto_rawDescData)
	})
	return file_pb_stredono_proto_rawDescData
}

var file_pb_stredono_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_pb_stredono_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pb_stredono_proto_goTypes = []interface{}{
	(Currency)(0),        // 0: stredono.Currency
	(TipStatus)(0),       // 1: stredono.TipStatus
	(AuthLevel)(0),       // 2: stredono.AuthLevel
	(EventType)(0),       // 3: stredono.EventType
	(AnimationType)(0),   // 4: stredono.AnimationType
	(Alignment)(0),       // 5: stredono.Alignment
	(Position)(0),        // 6: stredono.Position
	(Speed)(0),           // 7: stredono.Speed
	(*Tip)(nil),          // 8: stredono.Tip
	(*User)(nil),         // 9: stredono.User
	(*Event)(nil),        // 10: stredono.Event
	(*UsersAlerts)(nil),  // 11: stredono.UsersAlerts
	(*Alert)(nil),        // 12: stredono.Alert
	(*Token)(nil),        // 13: stredono.Token
	(*TwitchReward)(nil), // 14: stredono.TwitchReward
	(*TwitchUser)(nil),   // 15: stredono.TwitchUser
	nil,                  // 16: stredono.Event.DataEntry
}
var file_pb_stredono_proto_depIdxs = []int32{
	0,  // 0: stredono.Tip.Currency:type_name -> stredono.Currency
	1,  // 1: stredono.Tip.Status:type_name -> stredono.TipStatus
	2,  // 2: stredono.User.MinAuthLevel:type_name -> stredono.AuthLevel
	0,  // 3: stredono.User.Currency:type_name -> stredono.Currency
	3,  // 4: stredono.Event.Type:type_name -> stredono.EventType
	16, // 5: stredono.Event.Data:type_name -> stredono.Event.DataEntry
	12, // 6: stredono.UsersAlerts.Alerts:type_name -> stredono.Alert
	3,  // 7: stredono.Alert.EventType:type_name -> stredono.EventType
	4,  // 8: stredono.Alert.Animation:type_name -> stredono.AnimationType
	7,  // 9: stredono.Alert.AnimationSpeed:type_name -> stredono.Speed
	5,  // 10: stredono.Alert.Alignment:type_name -> stredono.Alignment
	6,  // 11: stredono.Alert.TextPosition:type_name -> stredono.Position
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_pb_stredono_proto_init() }
func file_pb_stredono_proto_init() {
	if File_pb_stredono_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_stredono_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_stredono_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_stredono_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_stredono_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersAlerts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_stredono_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_stredono_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_stredono_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TwitchReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_stredono_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TwitchUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_stredono_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_stredono_proto_goTypes,
		DependencyIndexes: file_pb_stredono_proto_depIdxs,
		EnumInfos:         file_pb_stredono_proto_enumTypes,
		MessageInfos:      file_pb_stredono_proto_msgTypes,
	}.Build()
	File_pb_stredono_proto = out.File
	file_pb_stredono_proto_rawDesc = nil
	file_pb_stredono_proto_goTypes = nil
	file_pb_stredono_proto_depIdxs = nil
}

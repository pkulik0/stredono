// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: pb/events_settings.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventsSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequireApproval bool             `protobuf:"varint,1,opt,name=RequireApproval,proto3" json:"RequireApproval,omitempty"`
	IsMuted         bool             `protobuf:"varint,2,opt,name=IsMuted,proto3" json:"IsMuted,omitempty"`
	IsPaused        bool             `protobuf:"varint,3,opt,name=IsPaused,proto3" json:"IsPaused,omitempty"`
	MinDisplayTime  int32            `protobuf:"varint,4,opt,name=MinDisplayTime,proto3" json:"MinDisplayTime,omitempty"`
	Tip             *TipSettings     `protobuf:"bytes,10,opt,name=Tip,proto3" json:"Tip,omitempty"`
	Cheer           *CheerSettings   `protobuf:"bytes,11,opt,name=Cheer,proto3" json:"Cheer,omitempty"`
	Sub             *SubSettings     `protobuf:"bytes,12,opt,name=Sub,proto3" json:"Sub,omitempty"`
	SubGift         *SubGiftSettings `protobuf:"bytes,13,opt,name=SubGift,proto3" json:"SubGift,omitempty"`
	Follow          *FollowSettings  `protobuf:"bytes,14,opt,name=Follow,proto3" json:"Follow,omitempty"`
	Raid            *RaidSettings    `protobuf:"bytes,15,opt,name=Raid,proto3" json:"Raid,omitempty"`
	ChatTTS         *ChatTTSSettings `protobuf:"bytes,16,opt,name=ChatTTS,proto3" json:"ChatTTS,omitempty"`
}

func (x *EventsSettings) Reset() {
	*x = EventsSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_events_settings_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsSettings) ProtoMessage() {}

func (x *EventsSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pb_events_settings_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsSettings.ProtoReflect.Descriptor instead.
func (*EventsSettings) Descriptor() ([]byte, []int) {
	return file_pb_events_settings_proto_rawDescGZIP(), []int{0}
}

func (x *EventsSettings) GetRequireApproval() bool {
	if x != nil {
		return x.RequireApproval
	}
	return false
}

func (x *EventsSettings) GetIsMuted() bool {
	if x != nil {
		return x.IsMuted
	}
	return false
}

func (x *EventsSettings) GetIsPaused() bool {
	if x != nil {
		return x.IsPaused
	}
	return false
}

func (x *EventsSettings) GetMinDisplayTime() int32 {
	if x != nil {
		return x.MinDisplayTime
	}
	return 0
}

func (x *EventsSettings) GetTip() *TipSettings {
	if x != nil {
		return x.Tip
	}
	return nil
}

func (x *EventsSettings) GetCheer() *CheerSettings {
	if x != nil {
		return x.Cheer
	}
	return nil
}

func (x *EventsSettings) GetSub() *SubSettings {
	if x != nil {
		return x.Sub
	}
	return nil
}

func (x *EventsSettings) GetSubGift() *SubGiftSettings {
	if x != nil {
		return x.SubGift
	}
	return nil
}

func (x *EventsSettings) GetFollow() *FollowSettings {
	if x != nil {
		return x.Follow
	}
	return nil
}

func (x *EventsSettings) GetRaid() *RaidSettings {
	if x != nil {
		return x.Raid
	}
	return nil
}

func (x *EventsSettings) GetChatTTS() *ChatTTSSettings {
	if x != nil {
		return x.ChatTTS
	}
	return nil
}

type TipSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template  string  `protobuf:"bytes,1,opt,name=Template,proto3" json:"Template,omitempty"`
	MinAmount float64 `protobuf:"fixed64,2,opt,name=MinAmount,proto3" json:"MinAmount,omitempty"`
}

func (x *TipSettings) Reset() {
	*x = TipSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_events_settings_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TipSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TipSettings) ProtoMessage() {}

func (x *TipSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pb_events_settings_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TipSettings.ProtoReflect.Descriptor instead.
func (*TipSettings) Descriptor() ([]byte, []int) {
	return file_pb_events_settings_proto_rawDescGZIP(), []int{1}
}

func (x *TipSettings) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *TipSettings) GetMinAmount() float64 {
	if x != nil {
		return x.MinAmount
	}
	return 0
}

type CheerSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template  string `protobuf:"bytes,1,opt,name=Template,proto3" json:"Template,omitempty"`
	MinAmount int32  `protobuf:"varint,2,opt,name=MinAmount,proto3" json:"MinAmount,omitempty"`
}

func (x *CheerSettings) Reset() {
	*x = CheerSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_events_settings_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheerSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheerSettings) ProtoMessage() {}

func (x *CheerSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pb_events_settings_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheerSettings.ProtoReflect.Descriptor instead.
func (*CheerSettings) Descriptor() ([]byte, []int) {
	return file_pb_events_settings_proto_rawDescGZIP(), []int{2}
}

func (x *CheerSettings) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *CheerSettings) GetMinAmount() int32 {
	if x != nil {
		return x.MinAmount
	}
	return 0
}

type SubSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template  string `protobuf:"bytes,1,opt,name=Template,proto3" json:"Template,omitempty"`
	MinMonths int32  `protobuf:"varint,2,opt,name=MinMonths,proto3" json:"MinMonths,omitempty"`
}

func (x *SubSettings) Reset() {
	*x = SubSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_events_settings_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubSettings) ProtoMessage() {}

func (x *SubSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pb_events_settings_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubSettings.ProtoReflect.Descriptor instead.
func (*SubSettings) Descriptor() ([]byte, []int) {
	return file_pb_events_settings_proto_rawDescGZIP(), []int{3}
}

func (x *SubSettings) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *SubSettings) GetMinMonths() int32 {
	if x != nil {
		return x.MinMonths
	}
	return 0
}

type SubGiftSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template string `protobuf:"bytes,1,opt,name=Template,proto3" json:"Template,omitempty"`
	MinCount int32  `protobuf:"varint,2,opt,name=MinCount,proto3" json:"MinCount,omitempty"`
}

func (x *SubGiftSettings) Reset() {
	*x = SubGiftSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_events_settings_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubGiftSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubGiftSettings) ProtoMessage() {}

func (x *SubGiftSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pb_events_settings_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubGiftSettings.ProtoReflect.Descriptor instead.
func (*SubGiftSettings) Descriptor() ([]byte, []int) {
	return file_pb_events_settings_proto_rawDescGZIP(), []int{4}
}

func (x *SubGiftSettings) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *SubGiftSettings) GetMinCount() int32 {
	if x != nil {
		return x.MinCount
	}
	return 0
}

type FollowSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template  string `protobuf:"bytes,1,opt,name=Template,proto3" json:"Template,omitempty"`
	IsEnabled bool   `protobuf:"varint,2,opt,name=IsEnabled,proto3" json:"IsEnabled,omitempty"`
}

func (x *FollowSettings) Reset() {
	*x = FollowSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_events_settings_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowSettings) ProtoMessage() {}

func (x *FollowSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pb_events_settings_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowSettings.ProtoReflect.Descriptor instead.
func (*FollowSettings) Descriptor() ([]byte, []int) {
	return file_pb_events_settings_proto_rawDescGZIP(), []int{5}
}

func (x *FollowSettings) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *FollowSettings) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

type RaidSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template   string `protobuf:"bytes,1,opt,name=Template,proto3" json:"Template,omitempty"`
	MinViewers int32  `protobuf:"varint,2,opt,name=MinViewers,proto3" json:"MinViewers,omitempty"`
}

func (x *RaidSettings) Reset() {
	*x = RaidSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_events_settings_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaidSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaidSettings) ProtoMessage() {}

func (x *RaidSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pb_events_settings_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaidSettings.ProtoReflect.Descriptor instead.
func (*RaidSettings) Descriptor() ([]byte, []int) {
	return file_pb_events_settings_proto_rawDescGZIP(), []int{6}
}

func (x *RaidSettings) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *RaidSettings) GetMinViewers() int32 {
	if x != nil {
		return x.MinViewers
	}
	return 0
}

type ChatTTSSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template  string `protobuf:"bytes,1,opt,name=Template,proto3" json:"Template,omitempty"`
	IsEnabled bool   `protobuf:"varint,2,opt,name=IsEnabled,proto3" json:"IsEnabled,omitempty"`
}

func (x *ChatTTSSettings) Reset() {
	*x = ChatTTSSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_events_settings_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTTSSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTTSSettings) ProtoMessage() {}

func (x *ChatTTSSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pb_events_settings_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTTSSettings.ProtoReflect.Descriptor instead.
func (*ChatTTSSettings) Descriptor() ([]byte, []int) {
	return file_pb_events_settings_proto_rawDescGZIP(), []int{7}
}

func (x *ChatTTSSettings) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *ChatTTSSettings) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

var File_pb_events_settings_proto protoreflect.FileDescriptor

var file_pb_events_settings_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x62, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x74, 0x72, 0x65,
	0x64, 0x6f, 0x6e, 0x6f, 0x1a, 0x0e, 0x70, 0x62, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x70, 0x62, 0x2f, 0x74, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1, 0x03, 0x0a, 0x0e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x4d, 0x75,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x4d, 0x75, 0x74,
	0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x50, 0x61, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x50, 0x61, 0x75, 0x73, 0x65, 0x64, 0x12, 0x26,
	0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x4d, 0x69, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x03, 0x54, 0x69, 0x70, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2e, 0x54,
	0x69, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x03, 0x54, 0x69, 0x70, 0x12,
	0x2d, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x05, 0x43, 0x68, 0x65, 0x65, 0x72, 0x12, 0x27,
	0x0a, 0x03, 0x53, 0x75, 0x62, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x03, 0x53, 0x75, 0x62, 0x12, 0x33, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x47, 0x69,
	0x66, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x64,
	0x6f, 0x6e, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x47, 0x69, 0x66, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x07, 0x53, 0x75, 0x62, 0x47, 0x69, 0x66, 0x74, 0x12, 0x30, 0x0a, 0x06,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x06, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x2a,
	0x0a, 0x04, 0x52, 0x61, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2e, 0x52, 0x61, 0x69, 0x64, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x04, 0x52, 0x61, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x43, 0x68,
	0x61, 0x74, 0x54, 0x54, 0x53, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x54, 0x53, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x07, 0x43, 0x68, 0x61, 0x74, 0x54, 0x54, 0x53, 0x22,
	0x47, 0x0a, 0x0b, 0x54, 0x69, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x69,
	0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4d,
	0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x49, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4d, 0x69, 0x6e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x4d, 0x69, 0x6e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x4d, 0x69, 0x6e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x22, 0x49, 0x0a, 0x0f,
	0x53, 0x75, 0x62, 0x47, 0x69, 0x66, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d,
	0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x4d,
	0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x0e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x22, 0x4a, 0x0a, 0x0c, 0x52, 0x61, 0x69, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x4d, 0x69, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x4d, 0x69, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x22,
	0x4b, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x74, 0x54, 0x54, 0x53, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x42, 0x26, 0x5a, 0x24,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6b, 0x75, 0x6c, 0x69,
	0x6b, 0x30, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_events_settings_proto_rawDescOnce sync.Once
	file_pb_events_settings_proto_rawDescData = file_pb_events_settings_proto_rawDesc
)

func file_pb_events_settings_proto_rawDescGZIP() []byte {
	file_pb_events_settings_proto_rawDescOnce.Do(func() {
		file_pb_events_settings_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_events_settings_proto_rawDescData)
	})
	return file_pb_events_settings_proto_rawDescData
}

var file_pb_events_settings_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_pb_events_settings_proto_goTypes = []interface{}{
	(*EventsSettings)(nil),  // 0: stredono.EventsSettings
	(*TipSettings)(nil),     // 1: stredono.TipSettings
	(*CheerSettings)(nil),   // 2: stredono.CheerSettings
	(*SubSettings)(nil),     // 3: stredono.SubSettings
	(*SubGiftSettings)(nil), // 4: stredono.SubGiftSettings
	(*FollowSettings)(nil),  // 5: stredono.FollowSettings
	(*RaidSettings)(nil),    // 6: stredono.RaidSettings
	(*ChatTTSSettings)(nil), // 7: stredono.ChatTTSSettings
}
var file_pb_events_settings_proto_depIdxs = []int32{
	1, // 0: stredono.EventsSettings.Tip:type_name -> stredono.TipSettings
	2, // 1: stredono.EventsSettings.Cheer:type_name -> stredono.CheerSettings
	3, // 2: stredono.EventsSettings.Sub:type_name -> stredono.SubSettings
	4, // 3: stredono.EventsSettings.SubGift:type_name -> stredono.SubGiftSettings
	5, // 4: stredono.EventsSettings.Follow:type_name -> stredono.FollowSettings
	6, // 5: stredono.EventsSettings.Raid:type_name -> stredono.RaidSettings
	7, // 6: stredono.EventsSettings.ChatTTS:type_name -> stredono.ChatTTSSettings
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_pb_events_settings_proto_init() }
func file_pb_events_settings_proto_init() {
	if File_pb_events_settings_proto != nil {
		return
	}
	file_pb_enums_proto_init()
	file_pb_tts_settings_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pb_events_settings_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_events_settings_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TipSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_events_settings_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheerSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_events_settings_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_events_settings_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubGiftSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_events_settings_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_events_settings_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaidSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_events_settings_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTTSSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_events_settings_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_events_settings_proto_goTypes,
		DependencyIndexes: file_pb_events_settings_proto_depIdxs,
		MessageInfos:      file_pb_events_settings_proto_msgTypes,
	}.Build()
	File_pb_events_settings_proto = out.File
	file_pb_events_settings_proto_rawDesc = nil
	file_pb_events_settings_proto_goTypes = nil
	file_pb_events_settings_proto_depIdxs = nil
}

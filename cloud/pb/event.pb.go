// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: pb/event.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubTier int32

const (
	SubTier_TIER_UNKNOWN SubTier = 0
	SubTier_TIER_1       SubTier = 1
	SubTier_TIER_2       SubTier = 2
	SubTier_TIER_3       SubTier = 3
)

// Enum value maps for SubTier.
var (
	SubTier_name = map[int32]string{
		0: "TIER_UNKNOWN",
		1: "TIER_1",
		2: "TIER_2",
		3: "TIER_3",
	}
	SubTier_value = map[string]int32{
		"TIER_UNKNOWN": 0,
		"TIER_1":       1,
		"TIER_2":       2,
		"TIER_3":       3,
	}
)

func (x SubTier) Enum() *SubTier {
	p := new(SubTier)
	*p = x
	return p
}

func (x SubTier) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubTier) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_event_proto_enumTypes[0].Descriptor()
}

func (SubTier) Type() protoreflect.EnumType {
	return &file_pb_event_proto_enumTypes[0]
}

func (x SubTier) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubTier.Descriptor instead.
func (SubTier) EnumDescriptor() ([]byte, []int) {
	return file_pb_event_proto_rawDescGZIP(), []int{0}
}

type EventType int32

const (
	EventType_TIP      EventType = 0
	EventType_CHEER    EventType = 1
	EventType_FOLLOW   EventType = 2
	EventType_SUB      EventType = 3
	EventType_SUB_GIFT EventType = 4
	EventType_RAID     EventType = 5
	EventType_CHAT_TTS EventType = 6
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "TIP",
		1: "CHEER",
		2: "FOLLOW",
		3: "SUB",
		4: "SUB_GIFT",
		5: "RAID",
		6: "CHAT_TTS",
	}
	EventType_value = map[string]int32{
		"TIP":      0,
		"CHEER":    1,
		"FOLLOW":   2,
		"SUB":      3,
		"SUB_GIFT": 4,
		"RAID":     5,
		"CHAT_TTS": 6,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_event_proto_enumTypes[1].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_pb_event_proto_enumTypes[1]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_pb_event_proto_rawDescGZIP(), []int{1}
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string            `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Type       EventType         `protobuf:"varint,2,opt,name=Type,proto3,enum=stredono.EventType" json:"Type,omitempty"`
	Uid        string            `protobuf:"bytes,3,opt,name=Uid,proto3" json:"Uid,omitempty"`
	ProviderID string            `protobuf:"bytes,4,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	SenderID   string            `protobuf:"bytes,5,opt,name=SenderID,proto3" json:"SenderID,omitempty"`
	SenderName string            `protobuf:"bytes,6,opt,name=SenderName,proto3" json:"SenderName,omitempty"`
	Provider   string            `protobuf:"bytes,7,opt,name=Provider,proto3" json:"Provider,omitempty"`
	TTSUrl     string            `protobuf:"bytes,8,opt,name=TTSUrl,proto3" json:"TTSUrl,omitempty"`
	IsApproved bool              `protobuf:"varint,9,opt,name=IsApproved,proto3" json:"IsApproved,omitempty"`
	Timestamp  int64             `protobuf:"varint,10,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Data       map[string]string `protobuf:"bytes,11,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_pb_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_pb_event_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Event) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_TIP
}

func (x *Event) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Event) GetProviderID() string {
	if x != nil {
		return x.ProviderID
	}
	return ""
}

func (x *Event) GetSenderID() string {
	if x != nil {
		return x.SenderID
	}
	return ""
}

func (x *Event) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *Event) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *Event) GetTTSUrl() string {
	if x != nil {
		return x.TTSUrl
	}
	return ""
}

func (x *Event) GetIsApproved() bool {
	if x != nil {
		return x.IsApproved
	}
	return false
}

func (x *Event) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Event) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_pb_event_proto protoreflect.FileDescriptor

var file_pb_event_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x62, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x73, 0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x22, 0x88, 0x03, 0x0a, 0x05, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x54, 0x53, 0x55, 0x72,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x54, 0x53, 0x55, 0x72, 0x6c, 0x12,
	0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2d, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x64, 0x6f, 0x6e, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x3f, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x54, 0x69, 0x65, 0x72,
	0x12, 0x10, 0x0a, 0x0c, 0x54, 0x49, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x49, 0x45, 0x52, 0x5f, 0x31, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x54, 0x49, 0x45, 0x52, 0x5f, 0x32, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x49,
	0x45, 0x52, 0x5f, 0x33, 0x10, 0x03, 0x2a, 0x5a, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x49, 0x50, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x43, 0x48, 0x45, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x4f, 0x4c, 0x4c, 0x4f,
	0x57, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x55, 0x42, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08,
	0x53, 0x55, 0x42, 0x5f, 0x47, 0x49, 0x46, 0x54, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x41,
	0x49, 0x44, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x54, 0x54, 0x53,
	0x10, 0x06, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x6b, 0x75, 0x6c, 0x69, 0x6b, 0x30, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x64, 0x6f, 0x6e,
	0x6f, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pb_event_proto_rawDescOnce sync.Once
	file_pb_event_proto_rawDescData = file_pb_event_proto_rawDesc
)

func file_pb_event_proto_rawDescGZIP() []byte {
	file_pb_event_proto_rawDescOnce.Do(func() {
		file_pb_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_event_proto_rawDescData)
	})
	return file_pb_event_proto_rawDescData
}

var file_pb_event_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pb_event_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pb_event_proto_goTypes = []interface{}{
	(SubTier)(0),   // 0: stredono.SubTier
	(EventType)(0), // 1: stredono.EventType
	(*Event)(nil),  // 2: stredono.Event
	nil,            // 3: stredono.Event.DataEntry
}
var file_pb_event_proto_depIdxs = []int32{
	1, // 0: stredono.Event.Type:type_name -> stredono.EventType
	3, // 1: stredono.Event.Data:type_name -> stredono.Event.DataEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pb_event_proto_init() }
func file_pb_event_proto_init() {
	if File_pb_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_event_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_event_proto_goTypes,
		DependencyIndexes: file_pb_event_proto_depIdxs,
		EnumInfos:         file_pb_event_proto_enumTypes,
		MessageInfos:      file_pb_event_proto_msgTypes,
	}.Build()
	File_pb_event_proto = out.File
	file_pb_event_proto_rawDesc = nil
	file_pb_event_proto_goTypes = nil
	file_pb_event_proto_depIdxs = nil
}

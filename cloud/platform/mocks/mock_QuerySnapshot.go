// Code generated by mockery v2.42.0. DO NOT EDIT.

package mocks

import (
	modules "github.com/pkulik0/stredono/cloud/platform/modules"
	mock "github.com/stretchr/testify/mock"
)

// MockQuerySnapshot is an autogenerated mock type for the QuerySnapshot type
type MockQuerySnapshot struct {
	mock.Mock
}

type MockQuerySnapshot_Expecter struct {
	mock *mock.Mock
}

func (_m *MockQuerySnapshot) EXPECT() *MockQuerySnapshot_Expecter {
	return &MockQuerySnapshot_Expecter{mock: &_m.Mock}
}

// GetAll provides a mock function with given fields:
func (_m *MockQuerySnapshot) GetAll() ([]modules.DocumentSnapshot, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetAll")
	}

	var r0 []modules.DocumentSnapshot
	var r1 error
	if rf, ok := ret.Get(0).(func() ([]modules.DocumentSnapshot, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() []modules.DocumentSnapshot); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]modules.DocumentSnapshot)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockQuerySnapshot_GetAll_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAll'
type MockQuerySnapshot_GetAll_Call struct {
	*mock.Call
}

// GetAll is a helper method to define mock.On call
func (_e *MockQuerySnapshot_Expecter) GetAll() *MockQuerySnapshot_GetAll_Call {
	return &MockQuerySnapshot_GetAll_Call{Call: _e.mock.On("GetAll")}
}

func (_c *MockQuerySnapshot_GetAll_Call) Run(run func()) *MockQuerySnapshot_GetAll_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockQuerySnapshot_GetAll_Call) Return(_a0 []modules.DocumentSnapshot, _a1 error) *MockQuerySnapshot_GetAll_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockQuerySnapshot_GetAll_Call) RunAndReturn(run func() ([]modules.DocumentSnapshot, error)) *MockQuerySnapshot_GetAll_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockQuerySnapshot creates a new instance of MockQuerySnapshot. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockQuerySnapshot(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockQuerySnapshot {
	mock := &MockQuerySnapshot{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
